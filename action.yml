name: Replay Playwright
author: Replay.io
description: Run and record Playwright tests with Replay
inputs:
  working-directory:
    description: "Relative path to app"
    default: "."
  command:
    description: "Command to run tests"
    default: "npx playwright test"
  project:
    description: "Project for replay browser"
    default: "replay-firefox"
  api-key:
    required: true
    description: "Replay.io API Key"
  public:
    description: "Makes the uploaded replay viewable by everyone"
    default: false
  upload-all:
    description: "Upload all recordings instead of only recordings of failed tests"
    default: false
runs:
  using: composite
  steps:
    - name: Install Dependencies
      run: npm install --silent --prefix $GITHUB_ACTION_PATH uuid
      shell: sh
    - name: Generate Test Run ID
      id: test-run-id
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          return require(require('path').join(process.env.GITHUB_ACTION_PATH, 'node_modules', 'uuid')).v4()
    - run: npm i --silent --prefix $GITHUB_ACTION_PATH @replayio/playwright@latest
      shell: sh
    - run: ${{ inputs.command }} --project ${{ inputs.project }} --reporter=line,$GITHUB_ACTION_PATH/node_modules/@replayio/playwright/reporter
      shell: sh
      working-directory: ${{ inputs.working-directory }}
      env:
        RECORD_REPLAY_DISABLE_REDUX_DEVTOOLS: 1
        RECORD_REPLAY_TEST_RUN_ID: ${{ steps.test-run-id.outputs.result }}
    - name: "Upload Recordings"
      id: "upload-recordings"
      uses: replayio/action-upload@ryan/scs-75-suppress-logging-from-installing-cli-in
      if: ${{ always() }}
      with:
        api-key: ${{ inputs.api-key }}
        public: ${{ inputs.public }}
        filter: ${{ !inputs.upload-all && 'function($v) { $v.metadata.test.result = "failed" }' || 'function($v) { $v.metadata.test.result }' }}
